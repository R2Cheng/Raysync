{"name": "默认参数新用户创建-权限rayfile-c验证--预期成功", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == None", "trace": "self = <testcases.scenario_test.test_06_raysync_create_user.TestRegLogList object at 0x00000297EDB1AC88>\ntestcase_data = {'account': 'raysync_test', 'email': 'raysync_test@email.com', 'emailSenderType': 0, 'except_msg': 'OK', ...}\n\n    @allure.story(\"用例--新用户创建--预期成功\")\n    @allure.description(\"该用例是针对业务场景的测试\")\n    @allure.title(\"默认参数新用户创建-权限rayfile-c验证--预期成功\")\n    @pytest.mark.multiple\n    # @pytest.mark.usefixtures(\"\")#执行用例前可以进行前置操作(数据库操作,尽量不使用)\n    def test_raysync_create_user_05(self, testcase_data):\n        name = testcase_data[\"name\"]\n        account = testcase_data[\"account\"]\n        password = testcase_data[\"password\"]\n        needUpdatapwd = testcase_data[\"needUpdatapwd\"]\n        email = testcase_data[\"email\"]\n        permission = testcase_data[\"permission\"]\n        emailSenderType = testcase_data[\"emailSenderType\"]\n        host = testcase_data[\"host\"]\n        except_result = testcase_data[\"except_result\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 获取token ***************\")\n        token = step_1()\n        logger.info(\"*************** 如创建用户存在，执行先删除改用户 ***************\")\n        step_2(token, account)\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result_createUser = admin_createuser(token, name=name, account=account, passwd=password,\n                                             needUpdatePwd=needUpdatapwd, email=email, permission=permission,\n                                             emailSenderType=emailSenderType)\n        assert result_createUser.json().get(\"result\") == except_result\n        assert except_msg in result_createUser.json().get(\"message\")\n    \n        logger.info(\"*************** 使用account登录验证 ***************\")\n        result_account = feLogin(account, password)\n        assert result_account.json().get(\"result\") == 0\n        assert \"OK\" in result_account.json().get(\"message\")\n        logger.info(\"使用account登录验证结果result ==>> 期望结果：{}， 实际结果：【 {} 】\".format(0, result_account.json().get(\"result\")))\n        logger.info(\"使用account登录验证信息message ==>> 期望结果：{}， 实际结果：【 {} 】\".format(\"OK\", result_account.json().get(\"message\")))\n    \n        logger.info(\"*************** rayfile-c权限验证 ***************\")\n        permission_data = decode_permission(permission)\n        out_upload, error_code_upload = rayfile_cmd(address=host, user=account, password=password, operation=\"upload\",destination=\"/\", source=\"E:\\\\testFile\\\\4M.txt\")\n        out_list, error_code_list = rayfile_cmd(address=host, user=account, password=password,operation=\"list\", destination=\"/\", source=\"\")\n        out_download, error_code_download = rayfile_cmd(address=host, user=account, password=password,operation=\"download\", destination=\"E:\\\\testFile\\\\download\",source=\"/4M.txt\")  # download\n        out_mkdir, error_code_mkdir = rayfile_cmd(address=host, user=account, password=password,operation=\"mkdir\", destination=\"/cmdmkdir\", source=\"\")  # mkdir\n        out_rename, error_code_rename = rayfile_cmd(address=host, user=account, password=password,operation=\"rename\", destination=\"test1\", source=\"/cmdmkdir\")  # rename\n        out_copy, error_code_copy = rayfile_cmd(address=host, user=account, password=password,operation=\"copy\", destination=\"/test1/test.txt\",source=\"/4M.txt\")  # copy\n        out_move, error_code_move = rayfile_cmd(address=host, user=account, password=password,operation=\"move\", destination=\"/test1/ssss.txt\",source=\"/4M.txt\")  # move\n        out_remove, error_code_remove = rayfile_cmd(address=host, user=account, password=password, operation=\"remove\",destination=\"/test1\", source=\"\")  # remove\n        if permission_data[\"list\"]:\n            code_list = None\n        else:\n            code_list = 16\n        if permission_data[\"upload\"]:\n            code_upload = None\n        else:\n            code_upload = 16\n        if permission_data[\"download\"]:\n            code_download = None\n        else:\n            code_download = 16\n        if permission_data[\"mkdir\"]:\n            code_mkdir = None\n        else:\n            code_mkdir = 16\n        if permission_data[\"rename\"]:\n            code_rename = None\n        else:\n            code_rename = 16\n        if permission_data[\"copy\"]:\n            code_copy = \"0\"\n        else:\n            code_copy = 16\n        if permission_data[\"move\"]:\n            code_move = \"0\"\n        else:\n            code_move = 16\n        if permission_data[\"remove\"]:\n            code_remove = None\n        else:\n            code_remove = 16\n        assert error_code_list == code_list\n        assert error_code_upload == code_upload\n        assert error_code_download == code_download\n>       assert error_code_mkdir == code_mkdir\nE       assert 0 == None\n\ntest_06_raysync_create_user.py:356: AssertionError"}, "description": "该用例是针对业务场景的测试", "steps": [{"name": "获取token", "status": "passed", "start": 1604297652730, "stop": 1604297652765}, {"name": "如创建用户存在，执行先删除改用户", "status": "passed", "parameters": [{"name": "token", "value": "'XlLybVKzDgCJvlyNyt46bA2jZr5BxQm6OJbpWFEc'"}, {"name": "account", "value": "'raysync_test'"}], "start": 1604297652765, "stop": 1604297652828}], "attachments": [{"name": "log", "source": "9c832c68-839e-4485-aac9-bb961aa5d681-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5724679a-5fab-469d-8675-36e235426bb7-attachment.txt", "type": "text/plain"}], "start": 1604297652729, "stop": 1604297672200, "uuid": "ad67e386-3c92-4267-a50f-384741400819", "historyId": "f89e41c20eb358324bfbb237c677f567", "testCaseId": "41e34ebd7b4d2bfec7dfb929bac8d008", "fullName": "testcases.scenario_test.test_06_raysync_create_user.TestRegLogList#test_raysync_create_user_05", "labels": [{"name": "story", "value": "用例--新用户创建--预期成功"}, {"name": "epic", "value": "针对业务场景的测试"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "场景：创建新用户"}, {"name": "tag", "value": "multiple"}, {"name": "parentSuite", "value": "testcases.scenario_test"}, {"name": "suite", "value": "test_06_raysync_create_user"}, {"name": "subSuite", "value": "TestRegLogList"}, {"name": "host", "value": "linsijie"}, {"name": "thread", "value": "136588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.scenario_test.test_06_raysync_create_user"}]}