{"name": "搜索用户姓名-中文搜索--预期成功", "status": "failed", "statusDetails": {"message": "AssertionError: assert '镭速' == '镭速测试'", "trace": "self = <testcases.scenario_test.test_07_raysync_select_user.TestSelectUser object at 0x0000015D78721AC8>\ntestcase_data = {'except_msg': 'OK', 'except_result': 0, 'query1': {'name': '镭速', 'totalCount': 4}, 'query2': {'name': '镭速测试', 'totalCount': 1}, ...}\n\n    @allure.story(\"用例--新用户创建--预期成功\")\n    @allure.description(\"该用例是针对业务场景的测试\")\n    @allure.title(\"搜索用户姓名-中文搜索--预期成功\")\n    @pytest.mark.multiple\n    @pytest.mark.usefixtures(\"create_user\")  # 执行用例前可以进行前置操作(数据库操作,尽量不使用)\n    def test_raysync_select_user_01(self, testcase_data):\n        query1 = testcase_data[\"query1\"]\n        query2 = testcase_data[\"query2\"]\n        query3 = testcase_data[\"query3\"]\n        except_result = testcase_data[\"except_result\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 获取token ***************\")\n        token = step_1()\n        logger.info(\"*************** 开始执行用例 ***************\")\n        logger.info(\"*************** 搜索中文名相同多个用户结果检验 ***************\")\n        userResult_1 = selectUsers(token,{\"name\":query1[\"name\"]})\n        assert userResult_1.json().get(\"result\") == except_result\n        assert except_msg in userResult_1.json().get(\"message\")\n        logger.info(\"搜索用户结果result ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_result, userResult_1.json().get(\"result\")))\n        logger.info(\"搜索用户结果message ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_msg, userResult_1.json().get(\"message\")))\n        userNum1 = userResult_1.json().get(\"totalCount\")\n        userNameList = []\n        for i in userResult_1.json().get(\"users\"):\n            userNameList.append(i[\"name\"])\n        for i in userNameList:\n            assert query1[\"name\"] in i\n        assert userNum1 == query1[\"totalCount\"]\n        logger.info(\"搜索中文名相同多个用户结果totalCount ==>> 期望结果：{}， 实际结果：【 {} 】\".format(query1[\"totalCount\"], userNum1))\n    \n        logger.info(\"*************** 搜索中文名一个用户结果检验 ***************\")\n        userResult_2 = selectUsers(token, {\"name\": query2[\"name\"]})\n        assert userResult_2.json().get(\"result\") == except_result\n        assert except_msg in userResult_2.json().get(\"message\")\n        logger.info(\"搜索用户结果result ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_result, userResult_2.json().get(\"result\")))\n        logger.info(\"搜索用户结果message ==>> 期望结果：{}， 实际结果：【 {} 】\".format(except_msg, userResult_2.json().get(\"message\")))\n        userNum2 = userResult_2.json().get(\"totalCount\")\n        username = userResult_1.json().get(\"users\")[0][\"name\"]\n        assert userNum2 == query2[\"totalCount\"]\n>       assert username == query2[\"name\"]\nE       AssertionError: assert '镭速' == '镭速测试'\n\ntest_07_raysync_select_user.py:61: AssertionError"}, "description": "该用例是针对业务场景的测试", "steps": [{"name": "获取token", "status": "passed", "start": 1604311357292, "stop": 1604311357328}], "attachments": [{"name": "log", "source": "b2d62792-d408-4566-a140-526d0d23d70a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "234e459c-8794-474b-889c-92fa3eba9548-attachment.txt", "type": "text/plain"}], "start": 1604311357291, "stop": 1604311357396, "uuid": "5eaddfb0-d7b3-4722-8011-621472ea54da", "historyId": "afc1f524ea057d7a102cf332145877bb", "testCaseId": "433d61c0f8c4ebb1f500bee0b6f29429", "fullName": "testcases.scenario_test.test_07_raysync_select_user.TestSelectUser#test_raysync_select_user_01", "labels": [{"name": "epic", "value": "针对业务场景的测试"}, {"name": "feature", "value": "场景：搜索用户"}, {"name": "story", "value": "用例--新用户创建--预期成功"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "multiple"}, {"name": "parentSuite", "value": "testcases.scenario_test"}, {"name": "suite", "value": "test_07_raysync_select_user"}, {"name": "subSuite", "value": "TestSelectUser"}, {"name": "host", "value": "linsijie"}, {"name": "thread", "value": "137440-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.scenario_test.test_07_raysync_select_user"}]}